// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AuthorityUpdated extends ethereum.Event {
  get params(): AuthorityUpdated__Params {
    return new AuthorityUpdated__Params(this);
  }
}

export class AuthorityUpdated__Params {
  _event: AuthorityUpdated;

  constructor(event: AuthorityUpdated) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newAuthority(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Bonded extends ethereum.Event {
  get params(): Bonded__Params {
    return new Bonded__Params(this);
  }
}

export class Bonded__Params {
  _event: Bonded;

  constructor(event: Bonded) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get referrer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get payout(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get timeStamp(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class ERC20BondTokenCreated extends ethereum.Event {
  get params(): ERC20BondTokenCreated__Params {
    return new ERC20BondTokenCreated__Params(this);
  }
}

export class ERC20BondTokenCreated__Params {
  _event: ERC20BondTokenCreated;

  constructor(event: ERC20BondTokenCreated) {
    this._event = event;
  }

  get bondToken(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get underlying(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get expiry(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class OwnerUpdated extends ethereum.Event {
  get params(): OwnerUpdated__Params {
    return new OwnerUpdated__Params(this);
  }
}

export class OwnerUpdated__Params {
  _event: OwnerUpdated;

  constructor(event: OwnerUpdated) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ExpiryTeller__createResult {
  value0: Address;
  value1: BigInt;

  constructor(value0: Address, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getValue0(): Address {
    return this.value0;
  }

  getValue1(): BigInt {
    return this.value1;
  }
}

export class ExpiryTeller__purchaseResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getValue0(): BigInt {
    return this.value0;
  }

  getValue1(): BigInt {
    return this.value1;
  }
}

export class ExpiryTeller extends ethereum.SmartContract {
  static bind(address: Address): ExpiryTeller {
    return new ExpiryTeller("ExpiryTeller", address);
  }

  FEE_DECIMALS(): BigInt {
    let result = super.call("FEE_DECIMALS", "FEE_DECIMALS():(uint48)", []);

    return result[0].toBigInt();
  }

  try_FEE_DECIMALS(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("FEE_DECIMALS", "FEE_DECIMALS():(uint48)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  authority(): Address {
    let result = super.call("authority", "authority():(address)", []);

    return result[0].toAddress();
  }

  try_authority(): ethereum.CallResult<Address> {
    let result = super.tryCall("authority", "authority():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  bondTokenImplementation(): Address {
    let result = super.call(
      "bondTokenImplementation",
      "bondTokenImplementation():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_bondTokenImplementation(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "bondTokenImplementation",
      "bondTokenImplementation():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  bondTokens(param0: Address, param1: BigInt): Address {
    let result = super.call(
      "bondTokens",
      "bondTokens(address,uint48):(address)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toAddress();
  }

  try_bondTokens(
    param0: Address,
    param1: BigInt
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "bondTokens",
      "bondTokens(address,uint48):(address)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  create(
    underlying_: Address,
    expiry_: BigInt,
    amount_: BigInt
  ): ExpiryTeller__createResult {
    let result = super.call(
      "create",
      "create(address,uint48,uint256):(address,uint256)",
      [
        ethereum.Value.fromAddress(underlying_),
        ethereum.Value.fromUnsignedBigInt(expiry_),
        ethereum.Value.fromUnsignedBigInt(amount_)
      ]
    );

    return new ExpiryTeller__createResult(
      result[0].toAddress(),
      result[1].toBigInt()
    );
  }

  try_create(
    underlying_: Address,
    expiry_: BigInt,
    amount_: BigInt
  ): ethereum.CallResult<ExpiryTeller__createResult> {
    let result = super.tryCall(
      "create",
      "create(address,uint48,uint256):(address,uint256)",
      [
        ethereum.Value.fromAddress(underlying_),
        ethereum.Value.fromUnsignedBigInt(expiry_),
        ethereum.Value.fromUnsignedBigInt(amount_)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new ExpiryTeller__createResult(value[0].toAddress(), value[1].toBigInt())
    );
  }

  createFeeDiscount(): BigInt {
    let result = super.call(
      "createFeeDiscount",
      "createFeeDiscount():(uint48)",
      []
    );

    return result[0].toBigInt();
  }

  try_createFeeDiscount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "createFeeDiscount",
      "createFeeDiscount():(uint48)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  deploy(underlying_: Address, expiry_: BigInt): Address {
    let result = super.call("deploy", "deploy(address,uint48):(address)", [
      ethereum.Value.fromAddress(underlying_),
      ethereum.Value.fromUnsignedBigInt(expiry_)
    ]);

    return result[0].toAddress();
  }

  try_deploy(
    underlying_: Address,
    expiry_: BigInt
  ): ethereum.CallResult<Address> {
    let result = super.tryCall("deploy", "deploy(address,uint48):(address)", [
      ethereum.Value.fromAddress(underlying_),
      ethereum.Value.fromUnsignedBigInt(expiry_)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getBondToken(underlying_: Address, expiry_: BigInt): Address {
    let result = super.call(
      "getBondToken",
      "getBondToken(address,uint48):(address)",
      [
        ethereum.Value.fromAddress(underlying_),
        ethereum.Value.fromUnsignedBigInt(expiry_)
      ]
    );

    return result[0].toAddress();
  }

  try_getBondToken(
    underlying_: Address,
    expiry_: BigInt
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getBondToken",
      "getBondToken(address,uint48):(address)",
      [
        ethereum.Value.fromAddress(underlying_),
        ethereum.Value.fromUnsignedBigInt(expiry_)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getBondTokenForMarket(id_: BigInt): Address {
    let result = super.call(
      "getBondTokenForMarket",
      "getBondTokenForMarket(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(id_)]
    );

    return result[0].toAddress();
  }

  try_getBondTokenForMarket(id_: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getBondTokenForMarket",
      "getBondTokenForMarket(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(id_)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getFee(referrer_: Address): BigInt {
    let result = super.call("getFee", "getFee(address):(uint48)", [
      ethereum.Value.fromAddress(referrer_)
    ]);

    return result[0].toBigInt();
  }

  try_getFee(referrer_: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getFee", "getFee(address):(uint48)", [
      ethereum.Value.fromAddress(referrer_)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  protocolFee(): BigInt {
    let result = super.call("protocolFee", "protocolFee():(uint48)", []);

    return result[0].toBigInt();
  }

  try_protocolFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("protocolFee", "protocolFee():(uint48)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  purchase(
    recipient_: Address,
    referrer_: Address,
    id_: BigInt,
    amount_: BigInt,
    minAmountOut_: BigInt
  ): ExpiryTeller__purchaseResult {
    let result = super.call(
      "purchase",
      "purchase(address,address,uint256,uint256,uint256):(uint256,uint48)",
      [
        ethereum.Value.fromAddress(recipient_),
        ethereum.Value.fromAddress(referrer_),
        ethereum.Value.fromUnsignedBigInt(id_),
        ethereum.Value.fromUnsignedBigInt(amount_),
        ethereum.Value.fromUnsignedBigInt(minAmountOut_)
      ]
    );

    return new ExpiryTeller__purchaseResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_purchase(
    recipient_: Address,
    referrer_: Address,
    id_: BigInt,
    amount_: BigInt,
    minAmountOut_: BigInt
  ): ethereum.CallResult<ExpiryTeller__purchaseResult> {
    let result = super.tryCall(
      "purchase",
      "purchase(address,address,uint256,uint256,uint256):(uint256,uint48)",
      [
        ethereum.Value.fromAddress(recipient_),
        ethereum.Value.fromAddress(referrer_),
        ethereum.Value.fromUnsignedBigInt(id_),
        ethereum.Value.fromUnsignedBigInt(amount_),
        ethereum.Value.fromUnsignedBigInt(minAmountOut_)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new ExpiryTeller__purchaseResult(value[0].toBigInt(), value[1].toBigInt())
    );
  }

  referrerFees(param0: Address): BigInt {
    let result = super.call("referrerFees", "referrerFees(address):(uint48)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_referrerFees(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "referrerFees",
      "referrerFees(address):(uint48)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  rewards(param0: Address, param1: Address): BigInt {
    let result = super.call("rewards", "rewards(address,address):(uint256)", [
      ethereum.Value.fromAddress(param0),
      ethereum.Value.fromAddress(param1)
    ]);

    return result[0].toBigInt();
  }

  try_rewards(param0: Address, param1: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "rewards",
      "rewards(address,address):(uint256)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get protocol_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get aggregator_(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get guardian_(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get authority_(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ClaimFeesCall extends ethereum.Call {
  get inputs(): ClaimFeesCall__Inputs {
    return new ClaimFeesCall__Inputs(this);
  }

  get outputs(): ClaimFeesCall__Outputs {
    return new ClaimFeesCall__Outputs(this);
  }
}

export class ClaimFeesCall__Inputs {
  _call: ClaimFeesCall;

  constructor(call: ClaimFeesCall) {
    this._call = call;
  }

  get tokens_(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get to_(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ClaimFeesCall__Outputs {
  _call: ClaimFeesCall;

  constructor(call: ClaimFeesCall) {
    this._call = call;
  }
}

export class CreateCall extends ethereum.Call {
  get inputs(): CreateCall__Inputs {
    return new CreateCall__Inputs(this);
  }

  get outputs(): CreateCall__Outputs {
    return new CreateCall__Outputs(this);
  }
}

export class CreateCall__Inputs {
  _call: CreateCall;

  constructor(call: CreateCall) {
    this._call = call;
  }

  get underlying_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get expiry_(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get amount_(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class CreateCall__Outputs {
  _call: CreateCall;

  constructor(call: CreateCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }

  get value1(): BigInt {
    return this._call.outputValues[1].value.toBigInt();
  }
}

export class DeployCall extends ethereum.Call {
  get inputs(): DeployCall__Inputs {
    return new DeployCall__Inputs(this);
  }

  get outputs(): DeployCall__Outputs {
    return new DeployCall__Outputs(this);
  }
}

export class DeployCall__Inputs {
  _call: DeployCall;

  constructor(call: DeployCall) {
    this._call = call;
  }

  get underlying_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get expiry_(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DeployCall__Outputs {
  _call: DeployCall;

  constructor(call: DeployCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class PurchaseCall extends ethereum.Call {
  get inputs(): PurchaseCall__Inputs {
    return new PurchaseCall__Inputs(this);
  }

  get outputs(): PurchaseCall__Outputs {
    return new PurchaseCall__Outputs(this);
  }
}

export class PurchaseCall__Inputs {
  _call: PurchaseCall;

  constructor(call: PurchaseCall) {
    this._call = call;
  }

  get recipient_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get referrer_(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get id_(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get amount_(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get minAmountOut_(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class PurchaseCall__Outputs {
  _call: PurchaseCall;

  constructor(call: PurchaseCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }

  get value1(): BigInt {
    return this._call.outputValues[1].value.toBigInt();
  }
}

export class RedeemCall extends ethereum.Call {
  get inputs(): RedeemCall__Inputs {
    return new RedeemCall__Inputs(this);
  }

  get outputs(): RedeemCall__Outputs {
    return new RedeemCall__Outputs(this);
  }
}

export class RedeemCall__Inputs {
  _call: RedeemCall;

  constructor(call: RedeemCall) {
    this._call = call;
  }

  get token_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount_(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class RedeemCall__Outputs {
  _call: RedeemCall;

  constructor(call: RedeemCall) {
    this._call = call;
  }
}

export class SetAuthorityCall extends ethereum.Call {
  get inputs(): SetAuthorityCall__Inputs {
    return new SetAuthorityCall__Inputs(this);
  }

  get outputs(): SetAuthorityCall__Outputs {
    return new SetAuthorityCall__Outputs(this);
  }
}

export class SetAuthorityCall__Inputs {
  _call: SetAuthorityCall;

  constructor(call: SetAuthorityCall) {
    this._call = call;
  }

  get newAuthority(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetAuthorityCall__Outputs {
  _call: SetAuthorityCall;

  constructor(call: SetAuthorityCall) {
    this._call = call;
  }
}

export class SetCreateFeeDiscountCall extends ethereum.Call {
  get inputs(): SetCreateFeeDiscountCall__Inputs {
    return new SetCreateFeeDiscountCall__Inputs(this);
  }

  get outputs(): SetCreateFeeDiscountCall__Outputs {
    return new SetCreateFeeDiscountCall__Outputs(this);
  }
}

export class SetCreateFeeDiscountCall__Inputs {
  _call: SetCreateFeeDiscountCall;

  constructor(call: SetCreateFeeDiscountCall) {
    this._call = call;
  }

  get discount_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetCreateFeeDiscountCall__Outputs {
  _call: SetCreateFeeDiscountCall;

  constructor(call: SetCreateFeeDiscountCall) {
    this._call = call;
  }
}

export class SetOwnerCall extends ethereum.Call {
  get inputs(): SetOwnerCall__Inputs {
    return new SetOwnerCall__Inputs(this);
  }

  get outputs(): SetOwnerCall__Outputs {
    return new SetOwnerCall__Outputs(this);
  }
}

export class SetOwnerCall__Inputs {
  _call: SetOwnerCall;

  constructor(call: SetOwnerCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetOwnerCall__Outputs {
  _call: SetOwnerCall;

  constructor(call: SetOwnerCall) {
    this._call = call;
  }
}

export class SetProtocolFeeCall extends ethereum.Call {
  get inputs(): SetProtocolFeeCall__Inputs {
    return new SetProtocolFeeCall__Inputs(this);
  }

  get outputs(): SetProtocolFeeCall__Outputs {
    return new SetProtocolFeeCall__Outputs(this);
  }
}

export class SetProtocolFeeCall__Inputs {
  _call: SetProtocolFeeCall;

  constructor(call: SetProtocolFeeCall) {
    this._call = call;
  }

  get fee_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetProtocolFeeCall__Outputs {
  _call: SetProtocolFeeCall;

  constructor(call: SetProtocolFeeCall) {
    this._call = call;
  }
}

export class SetReferrerFeeCall extends ethereum.Call {
  get inputs(): SetReferrerFeeCall__Inputs {
    return new SetReferrerFeeCall__Inputs(this);
  }

  get outputs(): SetReferrerFeeCall__Outputs {
    return new SetReferrerFeeCall__Outputs(this);
  }
}

export class SetReferrerFeeCall__Inputs {
  _call: SetReferrerFeeCall;

  constructor(call: SetReferrerFeeCall) {
    this._call = call;
  }

  get fee_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetReferrerFeeCall__Outputs {
  _call: SetReferrerFeeCall;

  constructor(call: SetReferrerFeeCall) {
    this._call = call;
  }
}
